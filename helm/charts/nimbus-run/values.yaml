
compute:
  computeType: "aws" # aws | gcp | none(fails)
  aws:
    # Fallback settings applied if not overridden in any action pool
    defaultSettings:
      # Minutes of idle time before scaling down an instance
      # (account for instance boot and runner startup time)
      idleScaleDownInMinutes:
      # AWS region for instance provisioning
      region:
      # AWS subnet ID for instance networking
      subnet:

      # AWS security group ID for instance firewall rules
      securityGroup:

      # AWS Credentials Profile to used. This will look for the aws credential file at the default location or if you specify the AWS_SHARED_CREDENTIALS_FILE.
      # If you don't specify this value then it will use the DefaultCredential provider to obtain credentials.
      # Please see default credentials provider chain
      # https://docs.aws.amazon.com/sdk-for-java/latest/developer-guide/credentials-chain.html
      credentialsProfile:
      # Disk configuration
      diskSettings:
        # Supported values: gp3, gp2, io2, io1, st1
        type:
        # Disk size in GiB
        size:

      # EC2 instance type for GitHub runners
      instanceType:

      # Maximum number of instances (0 = no limit)
      maxInstanceCount:

      # Name of the EC2 key pair to inject for SSH access
      keyPairName:

    # Default action pool placeholder (inherits from defaultSettings)
    defaultActionPool:
      name:

    # Specific action pools (override defaultSettings as needed)
    actionPools:
#      - name: burstable
#        instanceType: t3a.xlarge
#        maxInstanceCount: 9
#        subnet: subnet-1234
#        securityGroup: securityGroup-1234
#        diskSettings:
#          type: gp2
#          size: 4

  gcp:
    # Fallback settings applied if not overridden in any action pool
    defaultSettings:
      # Minutes of idle time before scaling down an instance
      # (account for instance boot and runner startup time)
      idleScaleDownInMinutes:

      # GCP project identifier for resource provisioning
      projectId:

      # GCP region to create instances in
      region:

      # Full path to the GCP subnetwork for instance networking
      subnet:

      # Full path to the GCP VPC network for instance networking
      vpc:

      # Available zones for instance placement (automatically balances across these)
      zones: []

      # Path to service account JSON for authenticating to GCP APIs
      # If unset, uses the default credentials provider chain
      serviceAccountPath:

      # Disk configuration
      diskSettings:
        # Disk size in GiB
        size:

      # GCE machine type for GitHub runners
      instanceType:

      # Maximum number of instances (0 = no limit)
      maxInstanceCount:

    # Default action pool (inherits all fields from defaultSettings)
    defaultActionPool:
      name:

    # Specific action pools (override defaultSettings as needed)
    actionPools:
#      - name: test
#        instanceType: n2d-standard-2
#        maxInstanceCount: 5
#        diskSettings:
#          size: 15

autoscaler:
  settings:
    name:
    logLevel:
    github:
      groupName: ""
      organizationName: ""
      # This will be stored inside the configuration file as is.
      # When the autoscaler starts up it'll try to resolve it as an environment variable. For example:
      # token: "${GITHUB_TOKEN}"
      # After words you'll need to add an environment variable that gets its valuefrom a secret. for example.
      #
      #  environmentVariables:
      #  - name: GITHUB_TOKEN
      #    valueFrom:
      #      secretKeyRef:
      #        name: mysecret  # Name of the Secret
      #        key: username

      token: "${GITHUB_TOKEN}"
      webhookSecret: "${WEBHOOK_SECRET}"
      #  webhookSecret: test
      webhookId:
      replayFailedDeliverOnStartup: true
    retryPolicy:
      # Maximum minutes a job may stay in “Queued” state before being retried
      # Once exceeded, the job is sent to the retry topic
      maxJobInQueuedInMinutes:

      # Minimum minutes to wait between retry attempts for the same job
      maxTimeBtwRetriesInMinutes:

      # Maximum number of retry attempts per job
      maxRetries:
  # This is a springboot app. Any additional settings set here will be injected in the application.yaml file that is generated.
  additionalSettings: { }
  deployment:
    image: bourgeoisiehacker/autoscaler:latest
    labels: { }
    nodeSelector: { }
    affinity: { }
    tolerations: {}
    ports:
      http:
        port: 8080
        portName: http
    volumes: []
    volumeMounts: []
    environmentVariables: []
    resources:
      requests:
        memory: "4Gi"
        cpu: "2"
      limits:
        memory: "4Gi"
        cpu: "2"
  serviceAccount:
    create: true
    annotations: { }
    labels: { }
  service:
    annotations: {}
    port: 8080
    type: ClusterIP
  configMap:
    nimbusRun:
      keyName: config.yaml


